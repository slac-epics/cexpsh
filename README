This module allows an application to use cexpsh() instead
of iocsh from 'main'. Currently relevant and supported on
Linux only.

To use this module:

   - add and entry in your application's RELEASE file pointing
     to this module.

   - your application's 'main' may look like this:

       #include <iocsh.h>
       #include <epicsThread.h>
       #include <epicsExit.h>

       #ifdef HAVE_CEXP
       #include <cexp.h>
       #endif

       int
       main(int argc, char **argv)
       {
       #ifdef HAVE_CEXP
         cexp_main(argc, argv);
       #else
         if ( argc >= 2 ) {
           iocsh(argv[1]);
           epicsThreadSleep(0.2);
         }
         iocsh(NULL);
       #endif
         epicsExit();
         return 0;
       }

     Some makefile magic provided by this module automatically
     defines HAVE_CEXP on platforms where cexpsh is available.

   - Your application's Makefile must link the cexp (and dependent)
     libraries. Again, the makefile magic defines CEXP_LIBS only
     when applicable:

         <myApp>_LIBS += $(CEXP_LIBS)

NOTES:
   1 No special symbol table is built - hence only symbols defined
     by the main application (and shared libraries) are 'known'
     to the shell.
     Your application's Makefile may enforce linking symbols which
     are not referenced by your app by adding

         -Wl,-u,<symbol>

     to the linker flags.

   2 cexp now supports reading symbols from shared libraries. All
     global symbols exported by any shared libs used by the application
     are available.

BUILDING THIS MODULE
====================

In order to build this module you must install the CEXP
sources in a subdirectory of $(TOP)/cexp/<subdir> and define

CEXP_VERS=<subdir>

in $(TOP)/cexp/Makefile accordingly. If you are working
with a CVS checkout then the CEXP package must be prepared:

  chdir $(TOP)/cexp/<subdir>
  make prep

This requires 'bison' and recent autotools.

A released tarball of CEXP does not need this preparation 
step.

If you want disassembler support then you have to install
binutils sources (vers. 2.21 works) and create a symlink
from the cexp top source directory to the binutils sources.

ln -s <binutils-2.21-top>  cexp/$(CEXP_VERS)/binutils

After installing the sources, chdir to $(TOP) and issue
'make' as usual.
